type Query {
    employees: [Employee]
    employee(id: ID!): Employee
    departments: [Department]
    department(id: ID!): Department
}

type Mutation {
    createEmployee(employee: EmployeeInput!): Employee
    updateEmployee(id: ID!, employee: EmployeeInput!): Employee
    deleteEmployee(id: ID!): Boolean
    createDepartment(department: DepartmentInput!): Department
    updateDepartment(id: ID!, department: DepartmentInput!): Department
    deleteDepartment(id: ID!): Boolean
}

type Employee {
    id: ID!
    name: String!
    lastname: String!
    dni: String!
    email: String!
    role: Role
    department: Department
}

type Department {
    id: ID!
    name: String!
    employees: [Employee]
}

type Role {
    id: ID!
    erole: String!
}

input EmployeeInput {
    name: String!
    lastname: String!
    dni: String!
    email: String!
    password: String!
    roleId: ID
    departmentId: ID
}

input DepartmentInput {
    name: String!
} 